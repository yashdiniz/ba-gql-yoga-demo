{
  "version": "6",
  "dialect": "sqlite",
  "id": "3d1d227d-a236-4150-830b-acc0fd20d9d9",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "tables": {
    "ba_gql_demo_reply": {
      "name": "ba_gql_demo_reply",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": false
        },
        "root_id": {
          "name": "root_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "parent_id": {
          "name": "parent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "author_id": {
          "name": "author_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "is_link": {
          "name": "is_link",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false,
          "generated": {
            "as": "(\"root_id\" IS NULL)",
            "type": "virtual"
          }
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ba_gql_demo_reply_author_id_ba_gql_demo_user_id_fk": {
          "name": "ba_gql_demo_reply_author_id_ba_gql_demo_user_id_fk",
          "tableFrom": "ba_gql_demo_reply",
          "tableTo": "ba_gql_demo_user",
          "columnsFrom": [
            "author_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "ba_gql_demo_user": {
      "name": "ba_gql_demo_user",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true,
          "autoincrement": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "about": {
          "name": "about",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        },
        "created_at": {
          "name": "created_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "autoincrement": false
        }
      },
      "indexes": {
        "user_name_idx": {
          "name": "user_name_idx",
          "columns": [
            "lower(\"name\")"
          ],
          "isUnique": true
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "ba_gql_demo_vote": {
      "name": "ba_gql_demo_vote",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "reply_id": {
          "name": "reply_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false
        },
        "created_at": {
          "name": "created_at",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "autoincrement": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ba_gql_demo_vote_user_id_ba_gql_demo_user_id_fk": {
          "name": "ba_gql_demo_vote_user_id_ba_gql_demo_user_id_fk",
          "tableFrom": "ba_gql_demo_vote",
          "tableTo": "ba_gql_demo_user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "ba_gql_demo_vote_reply_id_ba_gql_demo_reply_id_fk": {
          "name": "ba_gql_demo_vote_reply_id_ba_gql_demo_reply_id_fk",
          "tableFrom": "ba_gql_demo_vote",
          "tableTo": "ba_gql_demo_reply",
          "columnsFrom": [
            "reply_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "ba_gql_demo_vote_user_id_reply_id_pk": {
          "columns": [
            "user_id",
            "reply_id"
          ],
          "name": "ba_gql_demo_vote_user_id_reply_id_pk"
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {}
    }
  },
  "views": {},
  "enums": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "indexes": {
      "user_name_idx": {
        "columns": {
          "lower(\"name\")": {
            "isExpression": true
          }
        }
      }
    }
  }
}